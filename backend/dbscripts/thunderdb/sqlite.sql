-- Table to store Organization Units
CREATE TABLE ORGANIZATION_UNIT (
    ID          INTEGER PRIMARY KEY AUTOINCREMENT,
    OU_ID       VARCHAR(36) UNIQUE NOT NULL,
    PARENT_ID   VARCHAR(36),
    HANDLE      VARCHAR(50)        NOT NULL,
    NAME        VARCHAR(50)        NOT NULL,
    DESCRIPTION VARCHAR(255),
    CREATED_AT  TEXT DEFAULT (datetime('now')),
    UPDATED_AT  TEXT DEFAULT (datetime('now')),
    FOREIGN KEY (PARENT_ID) REFERENCES ORGANIZATION_UNIT (OU_ID) ON DELETE CASCADE
);

-- Table to store Users
CREATE TABLE USER (
    ID          INTEGER PRIMARY KEY AUTOINCREMENT,
    USER_ID     VARCHAR(36) UNIQUE NOT NULL,
    OU_ID       VARCHAR(36)        NOT NULL,
    TYPE        TEXT               NOT NULL,
    ATTRIBUTES  TEXT,
    CREDENTIALS TEXT,
    CREATED_AT  TEXT DEFAULT (datetime('now')),
    UPDATED_AT  TEXT DEFAULT (datetime('now'))
);

-- Table to store Groups
CREATE TABLE "GROUP" (
    ID          INTEGER PRIMARY KEY AUTOINCREMENT,
    GROUP_ID    VARCHAR(36) UNIQUE NOT NULL,
    OU_ID       VARCHAR(36)        NOT NULL,
    NAME        VARCHAR(50)        NOT NULL,
    DESCRIPTION VARCHAR(255),
    CREATED_AT  TEXT DEFAULT (datetime('now')),
    UPDATED_AT  TEXT DEFAULT (datetime('now'))
);

-- Table to store Group member assignments
CREATE TABLE GROUP_MEMBER_REFERENCE (
    ID          INTEGER PRIMARY KEY AUTOINCREMENT,
    GROUP_ID    VARCHAR(36) NOT NULL,
    MEMBER_TYPE VARCHAR(7)  NOT NULL,
    MEMBER_ID   VARCHAR(36) NOT NULL,
    CREATED_AT  TEXT DEFAULT (datetime('now')),
    UPDATED_AT  TEXT DEFAULT (datetime('now')),
    FOREIGN KEY (GROUP_ID) REFERENCES "GROUP" (GROUP_ID) ON DELETE CASCADE
);

-- Table to store basic service provider (app) details.
CREATE TABLE SP_APP (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    APP_ID VARCHAR(36) UNIQUE NOT NULL,
    APP_NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(50) NOT NULL,
    AUTH_FLOW_GRAPH_ID VARCHAR(50) NOT NULL,
    REGISTRATION_FLOW_GRAPH_ID VARCHAR(50) NOT NULL,
    IS_REGISTRATION_FLOW_ENABLED CHAR(1) DEFAULT '1',
    APP_JSON TEXT
);

-- Table to store OAuth configurations for SP apps.
CREATE TABLE IDN_OAUTH_CONSUMER_APPS (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    CONSUMER_KEY VARCHAR(255) NOT NULL,
    CONSUMER_SECRET VARCHAR(255) NOT NULL,
    APP_ID VARCHAR(36) NOT NULL,
    CALLBACK_URIS VARCHAR(500),
    GRANT_TYPES VARCHAR(255),
    RESPONSE_TYPES VARCHAR(255),
    TOKEN_ENDPOINT_AUTH_METHODS VARCHAR(255),
    FOREIGN KEY (APP_ID) REFERENCES SP_APP(APP_ID) ON DELETE CASCADE
);

-- Table to store inbound auth configs (e.g., OAuth, SAML) for SP apps.
CREATE TABLE SP_INBOUND_AUTH (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    INBOUND_AUTH_KEY VARCHAR(255) NOT NULL,
    INBOUND_AUTH_TYPE VARCHAR(50) NOT NULL,
    APP_ID VARCHAR(36) NOT NULL,
    FOREIGN KEY (APP_ID) REFERENCES SP_APP(APP_ID) ON DELETE CASCADE
);

-- Table to store allowed origins for OAuth apps.
CREATE TABLE IDN_OAUTH_ALLOWED_ORIGINS (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    ALLOWED_ORIGINS VARCHAR(500) NOT NULL UNIQUE
);

-- Table to store identity providers.
CREATE TABLE IDP (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    IDP_ID VARCHAR(36) UNIQUE NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(500),
    CREATED_AT TEXT DEFAULT (datetime('now')),
    UPDATED_AT TEXT DEFAULT (datetime('now'))
);

-- Table to store identity provider properties.
CREATE TABLE IDP_PROPERTY (
    IDP_ID VARCHAR(36) NOT NULL,
    PROPERTY_NAME VARCHAR(255) NOT NULL,
    PROPERTY_VALUE VARCHAR(500) NOT NULL,
    IS_SECRET CHAR(1) DEFAULT '0',
    PRIMARY KEY (IDP_ID, PROPERTY_NAME),
    FOREIGN KEY (IDP_ID) REFERENCES IDP(IDP_ID) ON DELETE CASCADE
);

-- Table to store notification senders.
CREATE TABLE NOTIFICATION_SENDER (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    NAME VARCHAR(255) NOT NULL,
    SENDER_ID VARCHAR(36) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(500),
    TYPE VARCHAR(20) NOT NULL,
    PROVIDER VARCHAR(20) NOT NULL,
    CREATED_AT TEXT DEFAULT (datetime('now')),
    UPDATED_AT TEXT DEFAULT (datetime('now'))
);

-- Table to store notification sender properties.
CREATE TABLE NOTIFICATION_SENDER_PROPERTY (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    SENDER_ID INTEGER NOT NULL,
    PROPERTY_NAME VARCHAR(255) NOT NULL,
    PROPERTY_VALUE VARCHAR(500),
    IS_SECRET CHAR(1) DEFAULT '0',
    UNIQUE (SENDER_ID, PROPERTY_NAME),
    FOREIGN KEY (SENDER_ID) REFERENCES NOTIFICATION_SENDER(SENDER_ID) ON DELETE CASCADE
);

-- Table to store certificates associated with various entities.
CREATE TABLE CERTIFICATE (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    CERT_ID VARCHAR(36) UNIQUE NOT NULL,
    REF_TYPE VARCHAR(20) NOT NULL,
    REF_ID VARCHAR(36) NOT NULL,
    TYPE VARCHAR(20) NOT NULL,
    VALUE TEXT NOT NULL,
    CREATED_AT TEXT DEFAULT (datetime('now')),
    UPDATED_AT TEXT DEFAULT (datetime('now')),
    UNIQUE (REF_TYPE, REF_ID)
);
