name: üê≥ Build and Push Docker Image to GHCR

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üê≥ Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: üîê Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: üìñ Read version
      id: version
      run: echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT

    - name: üèóÔ∏è Build and Push Docker image
      run: |
        # Convert repository name to lowercase for GHCR
        REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
        IMAGE_NAME="ghcr.io/${REPO_NAME}"
        
        # Get version without 'v' prefix for Docker tags
        DOCKER_VERSION="${{ steps.version.outputs.VERSION }}"
        if [[ $DOCKER_VERSION == v* ]]; then
          DOCKER_VERSION="${DOCKER_VERSION#v}"
        fi
        
        echo "üê≥ Building and pushing Docker image: ${IMAGE_NAME}:${DOCKER_VERSION}"
        
        # Build and push multi-arch image with version and latest tags
        docker buildx build \
          --platform linux/amd64 \
          --tag "${IMAGE_NAME}:${DOCKER_VERSION}" \
          --tag "${IMAGE_NAME}:latest" \
          --push \
          .

    - name: üìä Image info
      run: |
        REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
        IMAGE_NAME="ghcr.io/${REPO_NAME}"
        DOCKER_VERSION="${{ steps.version.outputs.VERSION }}"
        if [[ $DOCKER_VERSION == v* ]]; then
          DOCKER_VERSION="${DOCKER_VERSION#v}"
        fi
        
        echo "‚úÖ Docker image pushed successfully!"
        echo "üì¶ Image available at: ${IMAGE_NAME}:${DOCKER_VERSION}"
        echo "üì¶ Image available at: ${IMAGE_NAME}:latest"
        echo ""
        echo "üì• To download and run the image locally:"
        echo "1. Pull the image: docker pull ${IMAGE_NAME}:latest"
        echo "2. Run the container: docker run --rm -p 8090:8090 ${IMAGE_NAME}:latest"
        echo "3. Or with custom config: docker run --rm -p 8090:8090 -v \$(pwd)/deployment.yaml:/opt/thunder/repository/conf/deployment.yaml ${IMAGE_NAME}:latest"
